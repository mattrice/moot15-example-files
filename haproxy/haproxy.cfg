global
	log /dev/log local0
	log /dev/log local1 notice
	chroot /var/lib/haproxy
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private
	
	# Default ciphers to use on SSL-enabled listening sockets.
	# For more information, see ciphers(1SSL).
	ssl-default-bind-ciphers kEECDH+aRSA+AES:kRSA+AES:+AES256:aRSA+3DES:!RC4-SHA:!kEDH:!LOW:!EXP:!MD5:!aNULL:!eNULL
	ssl-default-bind-options no-sslv3

defaults
	log global
	mode http
	option httplog
	option log-separate-errors # Separate error logs from access logs
	balance roundrobin
	option dontlognull
	timeout connect 5000
	timeout client 10m		#very long timeouts for import/backups with lots of questions
	timeout server 10m		#very long timeouts for import/backups with lots of questions
	
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
	
frontend load_balancers
	#HTTP - bind to this port to allow HAProxy to automatically redirect to HTTPS
	bind 192.51.100.40:80
	#HTTPS
	bind 192.51.100.40:443 ssl crt /etc/ssl/private/wildcard.example.com.pem
	
	acl dest_moodle_prod hdr(host) -i moodle.example.edu
	use_backend moodle_prod_nodes if dest_moodle_prod
	
backend moodle_prod_nodes
	option forwardfor
	option http-server-close
	http-request set-header X-Forwarded-Port %[dst_port]
	http-request set-header X-Forwarded-Proto https if { ssl_fc }
	option httpchk HEAD /index.php HTTP/1.1\r\nUser-Agent:\ HAProxy\r\nHost:\

	# Redirect all traffic to HTTPS
	redirect scheme https if !{ ssl_fc }

	server mapp1 192.51.100.50:80 check inter 2000